{"version":3,"sources":["actions/errorActions.js","actions/types.js","components/Authenticator/login.js","actions/authActions.js","components/Authenticator/singup.js","components/Authenticator/logout.js","components/Navbar/index.js","components/difficultyCard/index.js","components/HardCard/index.js","components/MedCard/index.js","components/card/index.js","pages/Welcome.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["returnErrors","msg","status","type","payload","id","arguments","length","undefined","Loginmodal","state","loginstate","email","password","onClick","e","preventDefault","_this$state","_this","user","props","login","onChange","setState","Object","defineProperty","target","name","value","prevProps","_this$props","this","error","isAuthenticated","react_default","a","createElement","lib","className","icon","validate","label","waves","style","margin","Component","connect","auth","_ref2","dispatch","body","JSON","stringify","axios","post","headers","Content-Type","then","res","data","catch","err","response","SignupForm","registered","newUser","register","_ref","Logout","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","Fragment","logout","href","Nav","alignLinks","header","Authenticator_login","singup","Authenticator_logout","diffCard","m","s","HardCard","MedCard","card","textClassName","title","method","actions","grind_size","instructions","map","intruction","index","h1Styles","textAlign","Welcome","recipes","handleRecipeRender","difficulty","Axios","get","console","log","_this2","difficultyCard","components_MedCard","components_HardCard","recipe","i","components_card","initialState","token","localStorage","getItem","isLoading","combineReducers","action","objectSpread","setItem","removeItem","middleWare","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","App","getState","es","react_router_dom","components_Navbar","react_router","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+UAGaA,EAAe,SAACC,EAAKC,GAChC,MAAO,CACLC,KCIsB,aDHtBC,QAAS,CAAEH,MAAKC,SAAQG,GAH4BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAT,QEGzCG,6MACJC,MAAQ,CACNC,YAAY,EACZC,MAAO,GACPC,SAAU,GACVZ,IAAK,QAQPa,QAAU,SAAAC,GACRA,EAAEC,iBADW,IAAAC,EAGeC,EAAKR,MAE3BS,EAAO,CACXP,MANWK,EAGLL,MAINC,SAPWI,EAGEJ,UAQfK,EAAKE,MAAMC,MAAMF,MAmBnBG,SAAW,SAAAP,GACTG,EAAKK,SAALC,OAAAC,EAAA,EAAAD,CAAA,GAAiBT,EAAEW,OAAOC,KAAOZ,EAAEW,OAAOE,2FAjBzBC,GAAW,IAAAC,EACOC,KAAKX,MAAhCY,EADoBF,EACpBE,MAAOC,EADaH,EACbG,gBACXD,IAAUH,EAAUG,QAEL,eAAbA,EAAM3B,GACR0B,KAAKR,SAAS,CAAEtB,IAAK+B,EAAM/B,IAAIA,MAE/B8B,KAAKR,SAAS,CAAEtB,IAAK,QAGpB8B,KAAKrB,MAAMC,YACVsB,GACFF,KAAKR,SAAS,CAAEZ,YAAY,qCAShC,OACEuB,EAAAC,EAAAC,cAACC,EAAA,UAAD,KACIN,KAAKrB,MAAMT,IACXiC,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aAAaP,KAAKrB,MAAMT,IAAtC,KACE,OACH8B,KAAKrB,MAAMC,YACVuB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,eAAe,qBAA7B,KAIJJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACbJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACC,EAAA,UAAD,CACIE,KAAK,QACLZ,KAAK,QACLtB,GAAG,QACHO,OAAK,EACL4B,UAAQ,EACRC,MAAM,QACNnB,SAAUS,KAAKT,WAEjBY,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACC,EAAA,UAAD,CACEE,KAAK,OACL1B,UAAQ,EACRc,KAAK,WACLtB,GAAG,WACHoC,MAAM,WACNnB,SAAUS,KAAKT,WAEjBY,EAAAC,EAAAC,cAACC,EAAA,OAAD,CACEvB,QAASiB,KAAKjB,QACdX,KAAK,SACLuC,MAAM,QACNC,MAAO,CAAEC,OAAQ,KAJnB,SAQFV,EAAAC,EAAAC,cAAA,oBAtFiBS,aAiGVC,cAJS,SAAApC,GAAK,MAAK,CAChCuB,gBAAiBvB,EAAMqC,KAAKd,gBAC5BD,MAAOtB,EAAMsB,QAIb,CAAEX,MCvCiB,SAAA2B,GAAA,IAAGpC,EAAHoC,EAAGpC,MAAOC,EAAVmC,EAAUnC,SAAV,OAAyB,SAAAoC,GAE5C,IAOMC,EAAOC,KAAKC,UAAU,CAAExC,QAAOC,aAErCwC,IACGC,KAAK,YAAaJ,EAVN,CACbK,QAAS,CACPC,eAAgB,sBASjBC,KAAK,SAAAC,GAAG,OACPT,EAAS,CACP9C,KF9EqB,gBE+ErBC,QAASsD,EAAIC,SAGhBC,MAAM,SAAAC,GACLZ,EACEjD,EAAa6D,EAAIC,SAASH,KAAME,EAAIC,SAAS5D,OAAQ,eAEvD+C,EAAS,CACP9C,KFtFkB,oBCmGX2C,CAGbrC,GEnGIsD,6MACJrD,MAAQ,CACNiB,KAAM,GACNf,MAAO,GACPC,SAAU,GACVmD,YAAY,EACZ/D,IAAK,QA0BPqB,SAAW,SAAAP,GACTG,EAAKK,SAALC,OAAAC,EAAA,EAAAD,CAAA,GAAiBT,EAAEW,OAAOC,KAAOZ,EAAEW,OAAOE,WAG5Cd,QAAU,SAAAC,GACRA,EAAEC,iBADW,IAAAC,EAGqBC,EAAKR,MAGjCuD,EAAU,CACdtC,KAPWV,EAGLU,KAKNf,MARWK,EAGCL,MAMZC,SATWI,EAGQJ,UAUrBK,EAAKE,MAAM8C,SAASD,sFAlCHpC,GAAW,IAAAC,EACOC,KAAKX,MAAhCY,EADoBF,EACpBE,MAAOC,EADaH,EACbG,gBACXD,IAAUH,EAAUG,QAEL,kBAAbA,EAAM3B,GACR0B,KAAKR,SAAS,CAAEtB,IAAK+B,EAAM/B,IAAIA,MAE/B8B,KAAKR,SAAS,CAAEtB,IAAK,QAGpB8B,KAAKrB,MAAMsD,YACV/B,GACFF,KAAKR,SAAS,CAAEyC,YAAY,qCA0BhC,OACE9B,EAAAC,EAAAC,cAACC,EAAA,UAAD,KACGN,KAAKrB,MAAMT,IACViC,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aAAaP,KAAKrB,MAAMT,IAAtC,KACE,OACH8B,KAAKrB,MAAMsD,YACV9B,EAAAC,EAAAC,cAAA,MAAIE,UAAU,eAAe,0BAA7B,KAKFJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACC,EAAA,UAAD,CACEE,KAAK,MACLE,MAAM,OACNd,KAAK,OACLtB,GAAG,OACHiB,SAAUS,KAAKT,WAEjBY,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACC,EAAA,UAAD,CACEE,KAAK,QACLZ,KAAK,QACLtB,GAAG,QACHO,OAAK,EACL4B,UAAQ,EACRC,MAAM,QACNnB,SAAUS,KAAKT,WAEjBY,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACC,EAAA,UAAD,CACEE,KAAK,OACL1B,UAAQ,EACRc,KAAK,WACLtB,GAAG,WACHoC,MAAM,WACNnB,SAAUS,KAAKT,WAEjBY,EAAAC,EAAAC,cAACC,EAAA,OAAD,CACEvB,QAASiB,KAAKjB,QACdX,KAAK,SACLuC,MAAM,QACNC,MAAO,CAAEC,OAAQ,KAJnB,oBA5FeC,aA8GVC,cALS,SAAApC,GAAK,MAAK,CAChCuB,gBAAiBvB,EAAMqC,KAAKd,gBAC5BD,MAAOtB,EAAMsB,QAKb,CAAEkC,SDnFoB,SAAAC,GAAA,IAAGxC,EAAHwC,EAAGxC,KAAMf,EAATuD,EAASvD,MAAOC,EAAhBsD,EAAgBtD,SAAhB,OAA+B,SAAAoC,GAErD,IAOMC,EAAOC,KAAKC,UAAU,CAAEzB,OAAMf,QAAOC,aAE3CwC,IACGC,KAAK,aAAcJ,EAVP,CACbK,QAAS,CACPC,eAAgB,sBASjBC,KAAK,SAAAC,GAAG,OACPT,EAAS,CACP9C,KF7CwB,mBE8CxBC,QAASsD,EAAIC,SAGhBC,MAAM,SAAAC,GACLZ,EACEjD,EAAa6D,EAAIC,SAASH,KAAME,EAAIC,SAAS5D,OAAQ,kBAEvD+C,EAAS,CACP9C,KFrDqB,uBG8Gd2C,CAGbiB,GClHWK,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAA5C,OAAA8C,EAAA,EAAA9C,CAAAO,KAAAqC,GAAA5C,OAAA+C,EAAA,EAAA/C,CAAAO,KAAAP,OAAAgD,EAAA,EAAAhD,CAAA4C,GAAAK,MAAA1C,KAAAzB,YAAA,OAAAkB,OAAAkD,EAAA,EAAAlD,CAAA4C,EAAAC,GAAA7C,OAAAmD,EAAA,EAAAnD,CAAA4C,EAAA,EAAAQ,IAAA,SAAAhD,MAAA,WAMI,OACEM,EAAAC,EAAAC,cAACF,EAAAC,EAAM0C,SAAP,KACE3C,EAAAC,EAAAC,cAACC,EAAA,QAAD,CAASvB,QAASiB,KAAKX,MAAM0D,OAAQC,KAAK,KAA1C,eARRX,EAAA,CAA4BvB,aAgBbC,cACb,KACA,CAAEgC,OFwEkB,WACpB,MAAO,CACL3E,KF7F0B,oBIiBf2C,CAGbsB,GCCaY,MAnBf,WACE,OACE9C,EAAAC,EAAAC,cAACF,EAAAC,EAAM0C,SAAP,KACE3C,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,UAAU,SAAU2C,WAAW,SAC7C/C,EAAAC,EAAAC,cAACC,EAAA,QAAD,CAAS0C,KAAK,UAAUzC,UAAU,iBAAlC,QAEAJ,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAOhC,GAAG,SAAS6E,OAAO,SAAQhD,EAAAC,EAAAC,cAAC+C,EAAD,QAGlCjD,EAAAC,EAAAC,cAACC,EAAA,QAAD,CAAS0C,KAAK,UAAUzC,UAAU,iBAClCJ,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAOhC,GAAG,SAAS6E,OAAO,YAAWhD,EAAAC,EAAAC,cAACgD,EAAD,OADrC,WAIAlD,EAAAC,EAAAC,cAACiD,EAAD,gBCIeC,MAnBf,WACI,OAEQpD,EAAAC,EAAAC,cAACC,EAAA,UAAD,KAEQH,EAAAC,EAAAC,cAACC,EAAA,IAAD,CAAKC,UAAU,WAAWiD,EAAG,EAAGC,EAAG,IAC/BtD,EAAAC,EAAAC,cAACC,EAAA,UAAD,CAAWC,UAAU,QACjBJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,cACZJ,EAAAC,EAAAC,cAAA,6BCUjBqD,MAlBf,WACI,OAEQvD,EAAAC,EAAAC,cAACC,EAAA,UAAD,KAEQH,EAAAC,EAAAC,cAACC,EAAA,IAAD,CAAKC,UAAU,WAAWiD,EAAG,EAAGC,EAAG,IAC/BtD,EAAAC,EAAAC,cAACC,EAAA,UAAD,CAAWC,UAAU,QACjBJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,cACZJ,EAAAC,EAAAC,cAAA,6BCWjBsD,MAnBf,WACI,OAEQxD,EAAAC,EAAAC,cAACC,EAAA,UAAD,KAEQH,EAAAC,EAAAC,cAACC,EAAA,IAAD,CAAKC,UAAU,WAAWiD,EAAG,EAAGC,EAAG,IAC/BtD,EAAAC,EAAAC,cAACC,EAAA,UAAD,CAAWC,UAAU,QACjBJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,cACZJ,EAAAC,EAAAC,cAAA,qBCajBuD,MAtBf,SAAcvE,GACd,OACAc,EAAAC,EAAAC,cAACF,EAAAC,EAAM0C,SAAP,KACA3C,EAAAC,EAAAC,cAACC,EAAA,IAAD,KACAH,EAAAC,EAAAC,cAACC,EAAA,IAAD,CAAKkD,EAAG,EAAGC,EAAG,IACdtD,EAAAC,EAAAC,cAACC,EAAA,KAAD,CACEC,UAAU,qBACVsD,cAAc,aACdC,MAAQzE,EAAM0E,OACdC,QAAS,CAAC7D,EAAAC,EAAAC,cAAA,UAAMF,EAAAC,EAAAC,cAAA,YAElBF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAKhB,EAAM4E,YACV5E,EAAM6E,aAAaC,IAAI,SAACC,EAAYC,GAAb,OAAuBlE,EAAAC,EAAAC,cAAA,UAAK+D,EAAW,QAAUC,EAAQ,aCgC/EC,EAAW,CACbC,UAAW,UAsGAC,6MAhGX7F,MAAQ,CACJ8F,QAAS,GACT7E,KAAM,GACNsE,aAAc,MASlBQ,mBAAqB,SAACC,GAElBC,IAAMC,IAAI,8CAAgDF,GAAc,KACnEjD,KAAK,SAAAC,GAAG,OAAIxC,EAAKK,SAAS,CAAEiF,QAAS9C,EAAIC,SAGzCC,MAAM,SAAAC,GAAG,OAAIgD,QAAQC,IAAIjD,8EA2CrB,IAAAkD,EAAAhF,KAEL,OACIG,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0C,SAAA,KAEA3C,EAAAC,EAAAC,cAACC,EAAA,UAAD,KACIH,EAAAC,EAAAC,cAAA,MAAIO,MAAQ0D,GAAZ,gCACAnE,EAAAC,EAAAC,cAAA,MAAIO,MAAQ0D,GAAZ,iDAEAnE,EAAAC,EAAAC,cAACC,EAAA,IAAD,KACIH,EAAAC,EAAAC,cAAA,OAAKtB,QAAS,kBAAMiG,EAAKN,mBAAmB,UACxCvE,EAAAC,EAAAC,cAAC4E,EAAD,OAEJ9E,EAAAC,EAAAC,cAAA,OAAKtB,QAAS,kBAAMiG,EAAKN,mBAAmB,YACxCvE,EAAAC,EAAAC,cAAC6E,EAAD,OAEJ/E,EAAAC,EAAAC,cAAA,OAAKtB,QAAS,kBAAMiG,EAAKN,mBAAmB,UACxCvE,EAAAC,EAAAC,cAAC8E,EAAD,QAIJnF,KAAKrB,MAAM8F,QAAQN,IAAI,SAACiB,EAAQC,GAAT,OACvBlF,EAAAC,EAAAC,cAACiF,EAAD,CACIzC,IAAKwC,EACLtB,OAAQqB,EAAOrB,OACfG,aAAckB,EAAOlB,cAEpBkB,EAAOrB,kBA1FdjD,6BCpDhByE,EAAe,CACnBrH,IAAK,GACLC,OAAQ,KACRG,GAAI,cCMEiH,EAAe,CACnBC,MAAOC,aAAaC,QAAQ,SAC5BxF,gBAAiB,KACjByF,WAAW,EACXvG,KAAM,MCXKwG,cAAgB,CAC3B3F,MFGW,WAAuC,IAA9BtB,EAA8BJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBgH,EAAcM,EAAQtH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpD,OAAOoH,EAAOzH,MACZ,IXDsB,aWEpB,MAAO,CACLF,IAAK2H,EAAOxH,QAAQH,IACpBC,OAAQ0H,EAAOxH,QAAQF,OACvBG,GAAIuH,EAAOxH,QAAQC,IAEvB,IXNwB,eWOtB,MAAO,CACLJ,IAAK,GACLC,OAAQ,KACRG,GAAI,MAER,QACE,OAAOK,IEjBTqC,KDYa,WAAuC,IAA9BrC,EAA8BJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBgH,EAAcM,EAAQtH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpD,OAAQoH,EAAOzH,MACb,IZpBsB,eYqBpB,OAAOqB,OAAAqG,EAAA,EAAArG,CAAA,GACFd,EADL,CAEEgH,WAAW,IAEf,IZxBqB,cYyBnB,OAAOlG,OAAAqG,EAAA,EAAArG,CAAA,GACFd,EADL,CAEEuB,iBAAiB,EACjByF,WAAW,EACXvG,KAAMyG,EAAOxH,UAEjB,IZ7BuB,gBY8BvB,IZ3B0B,mBY6BxB,OADAoH,aAAaM,QAAQ,QAASF,EAAOxH,QAAQmH,OACtC/F,OAAAqG,EAAA,EAAArG,CAAA,GACFd,EACAkH,EAAOxH,QAFZ,CAGE6B,iBAAiB,EACjByF,WAAW,IAEf,IZvCoB,aYwCpB,IZtCoB,aYuCpB,IZtCwB,iBYuCxB,IZrCuB,gBYuCrB,OADAF,aAAaO,WAAW,SACjBvG,OAAAqG,EAAA,EAAArG,CAAA,GACFd,EADL,CAEE6G,MAAO,KACPpG,KAAM,KACNc,iBAAiB,EACjByF,WAAW,IAEf,QACE,OAAOhH,MEhDTsH,EAAa,CAACC,KAEdC,EAAmBC,OAAOC,sCAAwCC,IAOzDC,EANDC,YACZC,EANmB,GAQnBN,EAAiBO,IAAehE,WAAf,EAAmBuD,KCuBvBU,8LArBXJ,EAAMrF,SbCoB,SAACA,EAAU0F,GAEvC1F,EAAS,CAAE9C,KFjBe,iBEmB1BkD,IACGuD,IAAI,iBAAoB+B,GACxBlF,KAAK,SAAAC,GAAG,OACPT,EAAS,CACP9C,KFtBmB,cEuBnBC,QAASsD,EAAIC,SAGhBC,MAAM,SAAAC,GACLZ,EAASjD,EAAa6D,EAAIC,SAASH,KAAME,EAAIC,SAAS5D,SACtD+C,EAAS,CACP9C,KF5BkB,oDeexB,OACE+B,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAUN,MAAOA,GACjBpG,EAAAC,EAAAC,cAACyG,EAAA,EAAD,KACE3G,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0G,EAAD,MACA5G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,KACE7G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW3C,IACjCrE,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAW3C,eAZhC1D,aCAEsG,QACW,cAA7BhB,OAAOiB,SAASC,UAEe,UAA7BlB,OAAOiB,SAASC,UAEhBlB,OAAOiB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOtH,EAAAC,EAAAC,cAACqH,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrG,KAAK,SAAAsG,GACjCA,EAAaC","file":"static/js/main.aadde2f7.chunk.js","sourcesContent":["import { GET_ERRORS, CLEAR_ERRORS } from './types';\n\n// RETURN ERRORS\nexport const returnErrors = (msg, status, id = null) => {\n  return {\n    type: GET_ERRORS,\n    payload: { msg, status, id }\n  };\n};\n\n// CLEAR ERRORS\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n};\n","export const USER_LOADING = \"USER_LOADING\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\n\nexport const GET_ERRORS = 'GET_ERRORS';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\n","import React, { Component } from \"react\";\nimport { TextInput, Button, Container } from \"react-materialize\";\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/authActions';\n\nclass Loginmodal extends Component {\n  state = {\n    loginstate: false,\n    email: '',\n    password: '',\n    msg: null\n  };\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    login: PropTypes.func.isRequired\n  };\n\n  onClick = e => {\n    e.preventDefault();\n\n    const { email, password } = this.state;\n\n    const user = {\n      email,\n      password\n    };\n\n    // Attempt to login\n    this.props.login(user);\n  };\n\n  componentDidUpdate(prevProps) {\n    const { error, isAuthenticated } = this.props;\n    if (error !== prevProps.error) {\n      // Check for register error\n      if (error.id === 'LOGIN_FAIL') {\n        this.setState({ msg: error.msg.msg });\n      } else {\n        this.setState({ msg: null });\n      }\n    }\n    if (!this.state.loginstate) {\n      if (isAuthenticated) {\n        this.setState({ loginstate: true });\n      }\n    }\n  }\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  \n  render() {\n    return (\n      <Container>\n         {this.state.msg ? (\n          <h5 className=\" red-text\">{this.state.msg}!</h5>\n        ) : null}\n        {this.state.loginstate ? (\n          <h5 className=\" green-text\">{\"Login Successfuly!\"}!</h5>\n        ) : (\n          false\n        )}\n      <div className=\"Login\">\n        <br />\n        <TextInput\n            icon=\"email\"\n            name=\"email\"\n            id=\"email\"\n            email\n            validate\n            label=\"Email\"\n            onChange={this.onChange}\n          />\n          <br />\n          <TextInput\n            icon=\"lock\"\n            password\n            name=\"password\"\n            id=\"password\"\n            label=\"Password\"\n            onChange={this.onChange}\n          />\n          <Button\n            onClick={this.onClick}\n            type=\"submit\"\n            waves=\"light\"\n            style={{ margin: 10 }}\n          >\n            Login\n          </Button>\n        <br />\n      </div>\n      </Container>\n      \n    );\n  }\n}\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\nexport default connect(\n  mapStateToProps,\n  { login }\n)(Loginmodal);\n","import axios from 'axios';\nimport { returnErrors } from './errorActions';\n\nimport {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL\n} from './types';\n\n// Check token & load user\nexport const loadUser = () => (dispatch, getState) => {\n  // User loading\n  dispatch({ type: USER_LOADING });\n\n  axios\n    .get('/api/auth/user',  (getState))\n    .then(res =>\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: AUTH_ERROR\n      });\n    });\n};\n\n// Register User\nexport const register = ({ name, email, password }) => dispatch => {\n  // Headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify({ name, email, password });\n\n  axios\n    .post('/api/users', body, config)\n    .then(res =>\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      dispatch(\n        returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL')\n      );\n      dispatch({\n        type: REGISTER_FAIL\n      });\n    });\n};\n\n// Login User\nexport const login = ({ email, password }) => dispatch => {\n  // Headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify({ email, password });\n\n  axios\n    .post('/api/auth', body, config)\n    .then(res =>\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      dispatch(\n        returnErrors(err.response.data, err.response.status, 'LOGIN_FAIL')\n      );\n      dispatch({\n        type: LOGIN_FAIL\n      });\n    });\n};\n\n// Logout User\nexport const logout = () => {\n  return {\n    type: LOGOUT_SUCCESS\n  };\n};\n\n// Setup config/headers and token\nexport const tokenConfig = getState => {\n  // Get token from localstorage\n  const token = getState().auth.token;\n\n  // Headers\n  const config = {\n    headers: {\n      'Content-type': 'application/json'\n    }\n  };\n\n  // If token, add to headers\n  if (token) {\n    config.headers['x-auth-token'] = token;\n  }\n\n  return config;\n};\n","import React, { Component } from \"react\";\nimport { TextInput, Button, Container } from \"react-materialize\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { register } from \"../../actions/authActions\";\n\n\nclass SignupForm extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    registered: false,\n    msg: null\n  };\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    register: PropTypes.func.isRequired\n  };\n\n  componentDidUpdate(prevProps) {\n    const { error, isAuthenticated } = this.props;\n    if (error !== prevProps.error) {\n      // Check for register error\n      if (error.id === \"REGISTER_FAIL\") {\n        this.setState({ msg: error.msg.msg });\n      } else {\n        this.setState({ msg: null });\n      }\n    }\n    if (!this.state.registered) {\n      if (isAuthenticated) {\n        this.setState({ registered: true });\n      }\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onClick = e => {\n    e.preventDefault();\n\n    const { name, email, password } = this.state;\n\n    // Create user object\n    const newUser = {\n      name,\n      email,\n      password\n    };\n\n    // Attempt to register\n    this.props.register(newUser);\n  };\n\n  render() {\n    return (\n      <Container>\n        {this.state.msg ? (\n          <h5 className=\" red-text\">{this.state.msg}!</h5>\n        ) : null}\n        {this.state.registered ? (\n          <h5 className=\" green-text\">{\"Registered Successfuly!\"}!</h5>\n        ) : (\n          false\n        )}\n\n        <div className=\"SignupForm\">\n          <br />\n          <TextInput\n            icon=\"add\"\n            label=\"Name\"\n            name=\"name\"\n            id=\"name\"\n            onChange={this.onChange}\n          />\n          <br />\n          <TextInput\n            icon=\"email\"\n            name=\"email\"\n            id=\"email\"\n            email\n            validate\n            label=\"Email\"\n            onChange={this.onChange}\n          />\n          <br />\n          <TextInput\n            icon=\"lock\"\n            password\n            name=\"password\"\n            id=\"password\"\n            label=\"Password\"\n            onChange={this.onChange}\n          />\n          <Button\n            onClick={this.onClick}\n            type=\"submit\"\n            waves=\"light\"\n            style={{ margin: 10 }}\n          >\n            Sign up\n          </Button>\n        </div>\n      </Container>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(\n  mapStateToProps,\n  { register }\n)(SignupForm);\n","import React, { Component } from 'react';\nimport { NavItem} from 'react-materialize';\nimport { connect } from 'react-redux';\nimport { logout } from '../../actions/authActions';\nimport PropTypes from 'prop-types';\n\nexport class Logout extends Component {\n  static propTypes = {\n    logout: PropTypes.func.isRequired\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <NavItem onClick={this.props.logout} href='#'>\n          Logout\n        </NavItem>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { logout }\n)(Logout);\n","import React from 'react';\nimport { Navbar, NavItem, Modal} from 'react-materialize';\nimport 'components/Navbar/Navbar.css'\nimport Login from \"../Authenticator/login\"\nimport Signup from \"../Authenticator/singup\"\nimport  Logout from \"../Authenticator/logout\"\n\nfunction Nav() {\n  return (\n    <React.Fragment>\n      <Navbar className=\"navbar\"  alignLinks=\"right\">\n<NavItem href=\"#modal1\" className=\"modal-trigger\">\nLogin\n<Modal id=\"modal1\" header=\"Login\"><Login /></Modal>\n</NavItem >\n\n<NavItem href=\"#modal2\" className=\"modal-trigger\">\n<Modal id=\"modal2\" header=\"Register\"><Signup /></Modal>\nSign up\n</NavItem>\n<Logout />\n</Navbar>\n</React.Fragment>\n  );\n}\n\nexport default Nav;\n\n","import React from 'react';\nimport { Col, CardPanel, Container } from 'react-materialize';\n// import { Link } from 'react-router-dom';\nimport 'components/difficultyCard/diff.css'\n\nfunction diffCard() {\n    return (\n        \n            <Container>\n                \n                    <Col className=\"diffCard\" m={4} s={12}>\n                        <CardPanel className=\"teal\">\n                            <span className=\"white-text\">\n                                <p>Easy</p>\n                            </span>\n                        </CardPanel>\n                    </Col>\n            \n            </Container>\n      \n\n    )\n}\n\nexport default diffCard;\n\n\n","import React from 'react';\nimport { Col, CardPanel, Container } from 'react-materialize';\n\nimport 'components/HardCard/hard.css'\n\nfunction HardCard() {\n    return (\n        \n            <Container>\n                \n                    <Col className=\"diffCard\" m={4} s={12}>\n                        <CardPanel className=\"teal\">\n                            <span className=\"white-text\">\n                                <p>Hard</p>\n                            </span>\n                        </CardPanel>\n                    </Col>\n                \n            </Container>\n       \n    )\n}\n\nexport default HardCard;","import React from 'react';\nimport { Col, CardPanel, Container } from 'react-materialize';\n\nimport 'components/MedCard/med.css'\n\nfunction MedCard() {\n    return (\n        \n            <Container>\n                \n                    <Col className=\"diffCard\" m={4} s={12}>\n                        <CardPanel className=\"teal\">\n                            <span className=\"white-text\">\n                                <p>Med</p>\n                            </span>\n                        </CardPanel>\n                    </Col>\n                \n            </Container>\n       \n\n    )\n}\n\nexport default MedCard;","import React from 'react';\nimport { Row, Col, Card } from 'react-materialize';\n\n\nfunction card(props){\nreturn (\n<React.Fragment>\n<Row>\n<Col m={6} s={12}>\n<Card\n  className=\"blue-grey darken-1\"\n  textClassName=\"white-text\"\n  title= {props.method}\n  actions={[<a />,<a />]}\n>\n<ul>\n    <li>{props.grind_size}</li>\n    {props.instructions.map((intruction, index) => <li>{intruction['step' + (index + 1)]}</li>)}\n</ul>\n</Card>\n</Col>\n</Row>\n</React.Fragment>\n)\n}\n\nexport default card;","// import React from 'react';\nimport React, { Component } from 'react';\nimport DiffCard from '../components/difficultyCard';\nimport HardCard from '../components/HardCard';\nimport MedCard from '../components/MedCard';\nimport { Row, Container } from 'react-materialize';\nimport Card from '../components/card';\nimport Axios from 'axios';\n\n// const data = [\n\n//     {\n//         name: 'name 1',\n//         milk: '3',\n//         coffee: '4',\n//         skillLevel: 'easy'\n//     },\n//     {\n//         name: 'name 2',\n//         milk: '3',\n//         coffee: '4',\n//         skillLevel: 'easy'\n//     },\n//     {\n//         name: 'name 3',\n//         milk: '3',\n//         coffee: '4',\n//         skillLevel: 'medium'\n//     },\n//     {\n//         name: 'name 4',\n//         milk: '3',\n//         coffee: '4',\n//         skillLevel: 'hard'\n//     },\n//     {\n//         name: 'name 5',\n//         milk: '3',\n//         coffee: '4',\n//         skillLevel: 'hard'\n//     },\n//     {\n//         name: 'name 6',\n//         milk: '3',\n//         coffee: '4',\n//         skillLevel: 'hard'\n//     }\n// ]\n\nconst h1Styles = {\n    textAlign: 'center',\n\n}\n\nclass Welcome extends Component {\n\n    state = {\n        recipes: [],\n        name: '',\n        instructions: ''\n    };\n\n\n    // componentDidMount() {\n    //     this.handleRecipeRender();\n    // }\n\n\n    handleRecipeRender = (difficulty) => {\n        \n        Axios.get('http://localhost:3001/api/methods/methods/' + (difficulty || ''))\n            .then(res => this.setState({ recipes: res.data, }))\n            // .then(res => console.log(res))\n\n            .catch(err => console.log(err));\n    };\n\n\n        // handleSkillChange = (skillLevel) => {\n        //     if (skillLevel === 'easy') {\n        //         this.setState({\n        //             skillLevel: 'easy'\n        //         })\n\n        //     } else if (skillLevel === 'medium') {\n        //         this.setState({\n        //             skillLevel: 'medium'\n        //         })\n\n        //     } else if (skillLevel === 'hard') {\n        //         this.setState({\n        //             skillLevel: 'hard'\n        //         })\n\n        //     }\n        //     console.log(data);\n        //     console.log(this.state.skillLevel)\n        // }\n\n        // showSkillPage = () => {\n        //     this.resetPages();\n        //     this.setState({\n        //         showSkillPage: true,\n        //     })\n        // }\n\n\n        // resetPages = () => {\n        //     this.setState({\n        //         skillLevel: '',\n\n        //     })\n        // }\n\n        \n\n\n        render() {\n            // const filterdArray = this.state.data.filter(each => each.skillLevel === this.state.skillLevel)\n            return (\n                <>\n\n                <Container>\n                    <h1 style={ h1Styles }>Welcome. Lets Start Brewing.</h1>\n                    <h5 style={ h1Styles }>How difficult do you want the recipes to be?</h5>\n                </Container>\n                    <Row>\n                        <div onClick={() => this.handleRecipeRender('Easy')}>\n                            <DiffCard />\n                        </div>\n                        <div onClick={() => this.handleRecipeRender('Medium')}>\n                            <MedCard />\n                        </div>\n                        <div onClick={() => this.handleRecipeRender('Hard')}>\n                            <HardCard />\n                        </div>\n                    </Row>\n                    {\n                        this.state.recipes.map((recipe, i) =>\n                        <Card\n                            key={i}\n                            method={recipe.method}\n                            instructions={recipe.instructions}\n                        >\n                            {recipe.method}\n                        </Card>)\n                    }\n                </>\n            )\n        }\n}\n\nexport default Welcome;\n","import { GET_ERRORS, CLEAR_ERRORS } from '../actions/types';\n\nconst initialState = {\n  msg: {},\n  status: null,\n  id: null\n}\n\nexport default function(state = initialState, action) {\n  switch(action.type) {\n    case GET_ERRORS:\n      return {\n        msg: action.payload.msg,\n        status: action.payload.status,\n        id: action.payload.id\n      };\n    case CLEAR_ERRORS:\n      return {\n        msg: {},\n        status: null,\n        id: null\n      };\n    default:\n      return state;\n  }\n}","import {\n    USER_LOADED,\n    USER_LOADING,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT_SUCCESS,\n    REGISTER_SUCCESS,\n    REGISTER_FAIL\n  } from '../actions/types';\n  \n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    isLoading: false,\n    user: null\n  };\n  \n  export default function(state = initialState, action) {\n    switch (action.type) {\n      case USER_LOADING:\n        return {\n          ...state,\n          isLoading: true\n        };\n      case USER_LOADED:\n        return {\n          ...state,\n          isAuthenticated: true,\n          isLoading: false,\n          user: action.payload\n        };\n      case LOGIN_SUCCESS:\n      case REGISTER_SUCCESS:\n        localStorage.setItem('token', action.payload.token);\n        return {\n          ...state,\n          ...action.payload,\n          isAuthenticated: true,\n          isLoading: false\n        };\n      case AUTH_ERROR:\n      case LOGIN_FAIL:\n      case LOGOUT_SUCCESS:\n      case REGISTER_FAIL:\n        localStorage.removeItem('token');\n        return {\n          ...state,\n          token: null,\n          user: null,\n          isAuthenticated: false,\n          isLoading: false\n        };\n      default:\n        return state;\n    }\n  }\n  ","import { combineReducers } from 'redux';\nimport errorReducer from './errorReducer';\nimport authReducer from './authReducer';\n\nexport default combineReducers({\n    error: errorReducer,\n    auth: authReducer\n  });\n  ","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleWare = [thunk];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeEnhancers(applyMiddleware(...middleWare))\n);\n\nexport default store;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from './components/Navbar/index';\n// import Card from './components/card';\n// import DiffCard from './components/difficultyCard/index';\n// import Button from './components/TimerButton/index'\nimport Welcome from \"./pages/Welcome\";\n\nimport { Provider } from 'react-redux';\nimport store from './store'; \nimport { loadUser } from './actions/authActions';\n\nclass App extends Component {\n  componentDidMount() {\n    store.dispatch(loadUser());\n  }\n  render() {\n  return (\n    <Provider store={store}>\n    <Router>\n      <div>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Welcome} />\n          <Route exact path=\"/Welcome\" component={Welcome} />\n        </Switch>\n      </div>\n    </Router>\n    </Provider>\n  );\n}\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}